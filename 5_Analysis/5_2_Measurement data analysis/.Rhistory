#反向计分前的相关分析
correlation_matrix <- transformed_data %>%
select(matches("DSRSC|PHQ|DASS|CDI")) %>%
cor()
#导出
output_file <- here::here("output", "correlation_matrix.xlsx")
write.xlsx(correlation_matrix, output_file)
#可视化
p <- ggcorrplot(correlation_matrix, lab = TRUE,
method = "circle",
outline.color = "white",
colors = c("blue", "white", "red"),
ggtheme = ggplot2::theme_minimal(base_family = "sans"),
title = "未反向计分的相关系数") +
theme_minimal(base_family = "sans") +
theme(
text = element_text(size = 20, color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 22),
plot.background = element_rect(fill = "gray90"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray90", color = NA),
legend.position = "bottom",
legend.key.width = unit(4, "cm"),
legend.key.height = unit(1, "cm")
) +
scale_size_continuous(range = c(5, 12)) +
labs(x = "", y = "")
#保存图片
ggsave(here::here("output", "correlation_heatmap.png"),
plot = p, width = 32, height = 28, dpi = 300)
# 反向计分后的相关分析
# 定义需要反向计分的变量
reverse_vars <- c("DSRSC1", "DSRSC2", "DSRSC4", "DSRSC7", "DSRSC8", "DSRSC9", "DSRSC11", "DSRSC12", "DSRSC13", "DSRSC16",
"CDI2", "CDI5", "CDI7", "CDI8", "CDI10", "CDI11", "CDI13", "CDI15", "CDI16", "CDI18", "CDI21", "CDI24", "CDI25")
# 进行反向计分
reverse_scored_data <- transformed_data %>%
mutate_at(vars(one_of(reverse_vars)), ~2 - .x)
# 进行反向计分后的相关分析
reverse_scored_correlation_matrix <- reverse_scored_data %>%
select(matches("DSRSC|PHQ|DASS|CDI")) %>%
cor()
# 导出反向计分后的相关矩阵
output_file_reverse <- here::here("output", "reverse_scored_correlation_matrix.xlsx")
write.xlsx(reverse_scored_correlation_matrix, output_file_reverse)
# 可视化反向计分后的相关矩阵
p_reverse <- ggcorrplot(reverse_scored_correlation_matrix, lab = TRUE,
method = "circle",
outline.color = "white",
colors = c("blue", "white", "red"),
ggtheme = ggplot2::theme_minimal(base_family = "sans"),
title = "反向计分后的相关系数") +
theme_minimal(base_family = "sans") +
theme(
text = element_text(size = 20, color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 22),
plot.background = element_rect(fill = "gray90"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray90", color = NA),
legend.position = "bottom",
legend.key.width = unit(4, "cm"),
legend.key.height = unit(1, "cm")
) +
scale_size_continuous(range = c(5, 12)) +
labs(x = "", y = "")
# 保存反向计分后的相关系数热图
ggsave(here::here("output", "reverse_scored_correlation_heatmap.png"),
plot = p_reverse, width = 32, height = 28, dpi = 300)
# 载入必要的包
library(here)
library(bruceR)
library(tidyverse)
library(openxlsx)
library(ggcorrplot)
#载入数据
raw_data <- bruceR::import(here::here("data", "Rawdata1.xlsx"))
#筛选与抑郁有关的数据
selected_data <- raw_data %>%
select(就诊卡号, 性别, 年龄,
DSRSC1:DSRSC18,
PHQ1:PHQ9,
DASS3, DASS5, DASS10, DASS13, DASS16, DASS17, DASS21,
CDI1:CDI27)
#转换数据类型
selected_data_numeric <- selected_data %>%
mutate(性别 = factor(性别, levels = c("男", "女"), labels = c(1, 2))) %>%
mutate(across(matches("性别|年龄|DSRSC|PHQ|DASS|CDI"), as.numeric))
#处理缺失值
clean_data <- selected_data_numeric %>%
drop_na()
#原始数据-1，用以方便计算检出率
transformed_data <- clean_data %>%
mutate(across(matches("DSRSC|PHQ|DASS|CDI"), ~ .x - 1))
#描述统计
# 计算性别比例
gender_proportion <- clean_data %>%
summarise(
male = sum(性别 == 1, na.rm = TRUE),
female = sum(性别 == 2, na.rm = TRUE),
total = n(),
male_proportion = male / total * 100,
female_proportion = female / total * 100
)
# 打印性别比例
print(gender_proportion)
# 计算年龄的范围
age_range <- clean_data %>%
summarise(
min_age = min(年龄, na.rm = TRUE),
max_age = max(年龄, na.rm = TRUE)
)
# 打印年龄范围
print(age_range)
# 筛选出年龄在6岁以下的数据
under_6_data <- clean_data %>%
filter(年龄 < 6)
# 打印出年龄在6岁以下的数据
print(under_6_data)
# 数据处理完整思路
# 1：载入需要的数据。原始数据中除抑郁问卷外，还包括焦虑问卷，因此只载入测量抑郁的问卷，及人口学信息。具体为DSRSC、CDI、PHQ-9、DASS-21中测量抑郁的题目。
# 2：转换数据为数值型。
# 3：处理缺失值（实际没有缺失值）。
# 4：原始数据-1，用以方便计算检出率。原始数据的范围与量表原始数据范围是不一致的。例如：DSRSC量表的计分范围正常应该为0-2，检出率为≥15。但咱们收到的原始数据计分范围就是1-3，也就是所有数值都+了1。因此-1后才能计算正确的检出率。
# 5：描述统计，计算了1、性别比例。2、年龄范围。3、由于年龄范围显示
# 载入必要的包
library(here)
library(bruceR)
library(tidyverse)
library(openxlsx)
library(ggcorrplot)
#载入数据
raw_data <- bruceR::import(here::here("data", "Rawdata1.xlsx"))
#筛选与抑郁有关的数据
selected_data <- raw_data %>%
select(就诊卡号, 性别, 年龄,
DSRSC1:DSRSC18,
PHQ1:PHQ9,
DASS3, DASS5, DASS10, DASS13, DASS16, DASS17, DASS21,
CDI1:CDI27)
#转换数据类型
selected_data_numeric <- selected_data %>%
mutate(性别 = factor(性别, levels = c("男", "女"), labels = c(1, 2))) %>%
mutate(across(matches("性别|年龄|DSRSC|PHQ|DASS|CDI"), as.numeric))
#处理缺失值
clean_data <- selected_data_numeric %>%
drop_na()
#原始数据-1，用以方便计算检出率
transformed_data <- clean_data %>%
mutate(across(matches("DSRSC|PHQ|DASS|CDI"), ~ .x - 1))
#描述统计
# 计算性别比例
gender_proportion <- clean_data %>%
summarise(
male = sum(性别 == 1, na.rm = TRUE),
female = sum(性别 == 2, na.rm = TRUE),
total = n(),
male_proportion = male / total * 100,
female_proportion = female / total * 100
)
# 打印性别比例
print(gender_proportion)
# 计算年龄的范围
age_range <- clean_data %>%
summarise(
min_age = min(年龄, na.rm = TRUE),
max_age = max(年龄, na.rm = TRUE)
)
# 打印年龄范围
print(age_range)
# 筛选出年龄在6岁以下的数据
under_6_data <- clean_data %>%
filter(年龄 < 6)
# 打印出年龄在6岁以下的数据
print(under_6_data)
#反向计分前的相关分析
correlation_matrix <- transformed_data %>%
select(matches("DSRSC|PHQ|DASS|CDI")) %>%
cor()
#导出
output_file <- here::here("output", "correlation_matrix.xlsx")
write.xlsx(correlation_matrix, output_file)
#可视化
p <- ggcorrplot(correlation_matrix, lab = TRUE,
method = "circle",
outline.color = "white",
colors = c("blue", "white", "red"),
ggtheme = ggplot2::theme_minimal(base_family = "sans"),
title = "未反向计分的相关系数") +
theme_minimal(base_family = "sans") +
theme(
text = element_text(size = 20, color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 22),
plot.background = element_rect(fill = "gray90"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray90", color = NA),
legend.position = "bottom",
legend.key.width = unit(4, "cm"),
legend.key.height = unit(1, "cm")
) +
scale_size_continuous(range = c(5, 12)) +
labs(x = "", y = "")
#保存图片
ggsave(here::here("output", "correlation_heatmap.png"),
plot = p, width = 32, height = 28, dpi = 300)
# 反向计分后的相关分析
# 定义需要反向计分的变量
reverse_vars <- c("DSRSC1", "DSRSC2", "DSRSC4", "DSRSC7", "DSRSC8", "DSRSC9", "DSRSC11", "DSRSC12", "DSRSC13", "DSRSC16",
"CDI2", "CDI5", "CDI7", "CDI8", "CDI10", "CDI11", "CDI13", "CDI15", "CDI16", "CDI18", "CDI21", "CDI24", "CDI25")
# 进行反向计分
reverse_scored_data <- transformed_data %>%
mutate_at(vars(one_of(reverse_vars)), ~2 - .x)
# 进行反向计分后的相关分析
reverse_scored_correlation_matrix <- reverse_scored_data %>%
select(matches("DSRSC|PHQ|DASS|CDI")) %>%
cor()
# 导出反向计分后的相关矩阵
output_file_reverse <- here::here("output", "reverse_scored_correlation_matrix.xlsx")
write.xlsx(reverse_scored_correlation_matrix, output_file_reverse)
# 可视化反向计分后的相关矩阵
p_reverse <- ggcorrplot(reverse_scored_correlation_matrix, lab = TRUE,
method = "circle",
outline.color = "white",
colors = c("blue", "white", "red"),
ggtheme = ggplot2::theme_minimal(base_family = "sans"),
title = "反向计分后的相关系数") +
theme_minimal(base_family = "sans") +
theme(
text = element_text(size = 20, color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 22),
plot.background = element_rect(fill = "gray90"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray90", color = NA),
legend.position = "bottom",
legend.key.width = unit(4, "cm"),
legend.key.height = unit(1, "cm")
) +
scale_size_continuous(range = c(5, 12)) +
labs(x = "", y = "")
# 保存反向计分后的相关系数热图
ggsave(here::here("output", "reverse_scored_correlation_heatmap.png"),
plot = p_reverse, width = 32, height = 28, dpi = 300)
# 数据处理完整思路
# 1：载入需要的数据。原始数据中除抑郁问卷外，还包括焦虑问卷，因此只载入测量抑郁的问卷，及人口学信息。具体为DSRSC、CDI、PHQ-9、DASS-21中测量抑郁的题目。
# 2：转换数据为数值型。
# 3：处理缺失值（实际没有缺失值）。
# 4：原始数据-1，用以方便计算检出率。原始数据的范围与量表原始数据范围是不一致的。例如：DSRSC量表的计分范围正常应该为0-2，检出率为≥15。但咱们收到的原始数据计分范围就是1-3，也就是所有数值都+了1。因此-1后才能计算正确的检出率。
# 5：描述统计，计算了1、性别比例。2、年龄范围。3、由于年龄范围显示为0-29岁，因此筛选出来了14岁以下的数据（因为有说抑郁最早发病年龄在14岁），看看后期是否需要处理。
# 载入必要的包
library(here)
library(bruceR)
library(tidyverse)
library(openxlsx)
library(ggcorrplot)
#载入数据
raw_data <- bruceR::import(here::here("data", "Rawdata1.xlsx"))
#筛选与抑郁有关的数据
selected_data <- raw_data %>%
select(就诊卡号, 性别, 年龄,
DSRSC1:DSRSC18,
PHQ1:PHQ9,
DASS3, DASS5, DASS10, DASS13, DASS16, DASS17, DASS21,
CDI1:CDI27)
#转换数据类型
selected_data_numeric <- selected_data %>%
mutate(性别 = factor(性别, levels = c("男", "女"), labels = c(1, 2))) %>%
mutate(across(matches("性别|年龄|DSRSC|PHQ|DASS|CDI"), as.numeric))
#处理缺失值
clean_data <- selected_data_numeric %>%
drop_na()
#原始数据-1，用以方便计算检出率
transformed_data <- clean_data %>%
mutate(across(matches("DSRSC|PHQ|DASS|CDI"), ~ .x - 1))
#描述统计
# 计算性别比例
gender_proportion <- clean_data %>%
summarise(
male = sum(性别 == 1, na.rm = TRUE),
female = sum(性别 == 2, na.rm = TRUE),
total = n(),
male_proportion = male / total * 100,
female_proportion = female / total * 100
)
# 打印性别比例
print(gender_proportion)
# 计算年龄的范围
age_range <- clean_data %>%
summarise(
min_age = min(年龄, na.rm = TRUE),
max_age = max(年龄, na.rm = TRUE)
)
# 打印年龄范围
print(age_range)
# 筛选出年龄在14岁以下的数据
under_6_data <- clean_data %>%
filter(年龄 < 14)
# 打印出年龄在6岁以下的数据
print(under_6_data)
#反向计分前的相关分析
correlation_matrix <- transformed_data %>%
select(matches("DSRSC|PHQ|DASS|CDI")) %>%
cor()
#导出
output_file <- here::here("output", "correlation_matrix.xlsx")
write.xlsx(correlation_matrix, output_file)
#可视化
p <- ggcorrplot(correlation_matrix, lab = TRUE,
method = "circle",
outline.color = "white",
colors = c("blue", "white", "red"),
ggtheme = ggplot2::theme_minimal(base_family = "sans"),
title = "未反向计分的相关系数") +
theme_minimal(base_family = "sans") +
theme(
text = element_text(size = 20, color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 22),
plot.background = element_rect(fill = "gray90"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray90", color = NA),
legend.position = "bottom",
legend.key.width = unit(4, "cm"),
legend.key.height = unit(1, "cm")
) +
scale_size_continuous(range = c(5, 12)) +
labs(x = "", y = "")
#保存图片
ggsave(here::here("output", "correlation_heatmap.png"),
plot = p, width = 32, height = 28, dpi = 300)
# 反向计分后的相关分析
# 定义需要反向计分的变量
reverse_vars <- c("DSRSC1", "DSRSC2", "DSRSC4", "DSRSC7", "DSRSC8", "DSRSC9", "DSRSC11", "DSRSC12", "DSRSC13", "DSRSC16",
"CDI2", "CDI5", "CDI7", "CDI8", "CDI10", "CDI11", "CDI13", "CDI15", "CDI16", "CDI18", "CDI21", "CDI24", "CDI25")
# 进行反向计分
reverse_scored_data <- transformed_data %>%
mutate_at(vars(one_of(reverse_vars)), ~2 - .x)
# 进行反向计分后的相关分析
reverse_scored_correlation_matrix <- reverse_scored_data %>%
select(matches("DSRSC|PHQ|DASS|CDI")) %>%
cor()
# 导出反向计分后的相关矩阵
output_file_reverse <- here::here("output", "reverse_scored_correlation_matrix.xlsx")
write.xlsx(reverse_scored_correlation_matrix, output_file_reverse)
# 可视化反向计分后的相关矩阵
p_reverse <- ggcorrplot(reverse_scored_correlation_matrix, lab = TRUE,
method = "circle",
outline.color = "white",
colors = c("blue", "white", "red"),
ggtheme = ggplot2::theme_minimal(base_family = "sans"),
title = "反向计分后的相关系数") +
theme_minimal(base_family = "sans") +
theme(
text = element_text(size = 20, color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 22),
plot.background = element_rect(fill = "gray90"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray90", color = NA),
legend.position = "bottom",
legend.key.width = unit(4, "cm"),
legend.key.height = unit(1, "cm")
) +
scale_size_continuous(range = c(5, 12)) +
labs(x = "", y = "")
# 保存反向计分后的相关系数热图
ggsave(here::here("output", "reverse_scored_correlation_heatmap.png"),
plot = p_reverse, width = 32, height = 28, dpi = 300)
# 数据处理完整思路
# 1：载入需要的数据。原始数据中除抑郁问卷外，还包括焦虑问卷，因此只载入测量抑郁的问卷，及人口学信息。具体为DSRSC、CDI、PHQ-9、和DASS-21中测量抑郁的题目。
# 2：转换数据为数值型。
# 3：处理缺失值（实际没有缺失值）。
# 4：原始数据-1，用以方便计算检出率。原始数据的范围与量表原始数据范围是不一致的。例如：DSRSC量表的计分范围正常应该为0-2，检出率为≥15。但咱们收到的原始数据计分范围就是1-3，也就是所有数值都+了1。因此-1后才能计算正确的检出率。
# 5：描述统计，计算了1、性别比例。2、年龄范围。3、由于年龄范围显示为0-29岁，因此筛选出来了6岁以下的数据（也可以改成其他岁数，我随便挑了6岁），看看是否需要处理这些数据。
# 6：相关分析。首先，使用原始数据进行了相关分析，发现问题：1、DSRSC问卷内相关有正有负。2、CDI问卷内相关有正有负。因此，计算了反向计分后的相关。发现问题：反向计分后的DSRSC问卷内相关都是正的，但是和其他三个问卷都是负相关。
# 由于目前的计分应该是有问题的，暂时没进一步分析，预计后续的分析 7：检出率分析。8：网络分析。
# 载入必要的包
library(here)
library(bruceR)
library(tidyverse)
library(openxlsx)
library(ggcorrplot)
#载入数据
raw_data <- bruceR::import(here::here("data", "Rawdata1.xlsx"))
#筛选与抑郁有关的数据
selected_data <- raw_data %>%
select(就诊卡号, 性别, 年龄,
DSRSC1:DSRSC18,
PHQ1:PHQ9,
DASS3, DASS5, DASS10, DASS13, DASS16, DASS17, DASS21,
CDI1:CDI27)
#转换数据类型
selected_data_numeric <- selected_data %>%
mutate(性别 = factor(性别, levels = c("男", "女"), labels = c(1, 2))) %>%
mutate(across(matches("性别|年龄|DSRSC|PHQ|DASS|CDI"), as.numeric))
#处理缺失值
clean_data <- selected_data_numeric %>%
drop_na()
#原始数据-1，用以方便计算检出率
transformed_data <- clean_data %>%
mutate(across(matches("DSRSC|PHQ|DASS|CDI"), ~ .x - 1))
#描述统计
# 计算性别比例
gender_proportion <- clean_data %>%
summarise(
male = sum(性别 == 1, na.rm = TRUE),
female = sum(性别 == 2, na.rm = TRUE),
total = n(),
male_proportion = male / total * 100,
female_proportion = female / total * 100
)
# 打印性别比例
print(gender_proportion)
# 计算年龄的范围
age_range <- clean_data %>%
summarise(
min_age = min(年龄, na.rm = TRUE),
max_age = max(年龄, na.rm = TRUE)
)
# 打印年龄范围
print(age_range)
# 筛选出年龄在6岁以下的数据
under_6_data <- clean_data %>%
filter(年龄 < 6)
# 打印出年龄在6岁以下的数据
print(under_6_data)
#反向计分前的相关分析
correlation_matrix <- transformed_data %>%
select(matches("DSRSC|PHQ|DASS|CDI")) %>%
cor()
#导出
output_file <- here::here("output", "correlation_matrix.xlsx")
write.xlsx(correlation_matrix, output_file)
#可视化
p <- ggcorrplot(correlation_matrix, lab = TRUE,
method = "circle",
outline.color = "white",
colors = c("blue", "white", "red"),
ggtheme = ggplot2::theme_minimal(base_family = "sans"),
title = "未反向计分的相关系数") +
theme_minimal(base_family = "sans") +
theme(
text = element_text(size = 20, color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 22),
plot.background = element_rect(fill = "gray90"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray90", color = NA),
legend.position = "bottom",
legend.key.width = unit(4, "cm"),
legend.key.height = unit(1, "cm")
) +
scale_size_continuous(range = c(5, 12)) +
labs(x = "", y = "")
#保存图片
ggsave(here::here("output", "correlation_heatmap.png"),
plot = p, width = 32, height = 28, dpi = 300)
# 反向计分后的相关分析
# 定义需要反向计分的变量
reverse_vars <- c("DSRSC1", "DSRSC2", "DSRSC4", "DSRSC7", "DSRSC8", "DSRSC9", "DSRSC11", "DSRSC12", "DSRSC13", "DSRSC16",
"CDI2", "CDI5", "CDI7", "CDI8", "CDI10", "CDI11", "CDI13", "CDI15", "CDI16", "CDI18", "CDI21", "CDI24", "CDI25")
# 进行反向计分
reverse_scored_data <- transformed_data %>%
mutate_at(vars(one_of(reverse_vars)), ~2 - .x)
# 进行反向计分后的相关分析
reverse_scored_correlation_matrix <- reverse_scored_data %>%
select(matches("DSRSC|PHQ|DASS|CDI")) %>%
cor()
# 导出反向计分后的相关矩阵
output_file_reverse <- here::here("output", "reverse_scored_correlation_matrix.xlsx")
write.xlsx(reverse_scored_correlation_matrix, output_file_reverse)
# 可视化反向计分后的相关矩阵
p_reverse <- ggcorrplot(reverse_scored_correlation_matrix, lab = TRUE,
method = "circle",
outline.color = "white",
colors = c("blue", "white", "red"),
ggtheme = ggplot2::theme_minimal(base_family = "sans"),
title = "反向计分后的相关系数") +
theme_minimal(base_family = "sans") +
theme(
text = element_text(size = 20, color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 14),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 22),
plot.background = element_rect(fill = "gray90"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray90", color = NA),
legend.position = "bottom",
legend.key.width = unit(4, "cm"),
legend.key.height = unit(1, "cm")
) +
scale_size_continuous(range = c(5, 12)) +
labs(x = "", y = "")
# 保存反向计分后的相关系数热图
ggsave(here::here("output", "reverse_scored_correlation_heatmap.png"),
plot = p_reverse, width = 32, height = 28, dpi = 300)
