---
title: "Untitled"
author: "yuki"
date: "2023-08-17"
output: html_document
---
```{r}
#base
#install.packages('tidyverse')
#install.packages('bruceR')
library('dplyr')
library("tidyr")
library("readxl")
#plot
#install.packages('ggplot2')
library('ggplot2')

#color
#install.packages('viridisLite')
#install.packages('viridis')
library('viridisLite')
library('viridis')
#if you use mac OS, you should change the path of font file
#default: simsun.ttc (songti)

#Figure1.pdf display Chinese
#install.packages('showtext')
#install.packages('Cairo')
#install.packages('sysfonts')
#install.packages('showtextdb')
library('sysfonts')
library('showtextdb')
library('showtext')
library('Cairo')
```

```{r}
################################################################################
rawdata = readxl::read_excel("../DATA/Depression_Matrix.xlsx")  #Load data for plot (difference between specific and compound symptoms)
  #the structure of matrixA: 
  #first row: scale_name_1, scale_name_2, scale_name_3,...,scale_name_n,S_name
  #...
  #each row represents a symptom
  #each column represents a scale

#setting the number of scales and symptoms 
n_scales = 28 #number of scales
n_symptoms = 84 #number of symptoms

################################################################################

order_data = rawdata %>%
  dplyr::select(-face, -color) %>%
  dplyr::mutate(count = rowSums(across(where(is.numeric)), na.rm=TRUE)) %>%
  dplyr::arrange(.,desc(count)) %>%
  dplyr::select(.,-count)

d <- order_data %>%
  dplyr::select(.,-S_name) %>%
  dplyr::mutate(.,S = paste(1:nrow(order_data),sep = "")) %>%
  reshape2::melt(., id.vars="S", variable.name="Scales", value.name="Type") %>%
  dplyr::filter(.,Type >= 1) %>%
  dplyr::mutate(
    .,
    Type = ifelse(
      Type==1,
      "Scale contains compound symptom",
      "Scale contains specific symptom"
    )
  ) %>%
  dplyr::mutate(.,S=as.numeric(S))
  
symp <- order_data %>%
  ############################让症状倒序排列##################################
  dplyr::arrange(desc(row_number())) %>%
  dplyr::mutate(.,S=nrow(.):1) %>%
  ############################让症状倒序排列##################################
  dplyr::mutate(S_name = factor(S_name,levels = .$S_name))  %>%
  dplyr::left_join(rawdata, by = "S_name") %>%
  dplyr::select(S, S_name, face, color) 

num = d %>%
  dplyr::mutate(n=1) %>%
  dplyr::group_by(Scales) %>%
  dplyr::summarise(.,count = sum(n)) %>%
  dplyr::ungroup() %>%
  dplyr::arrange(.,desc(count)) %>%
  dplyr::mutate(order=1:nrow(.))
  
CA_plot = dplyr::full_join(num, d, by = "Scales") %>%
  dplyr::mutate(Scales2=order) %>%
  dplyr::mutate(Scales = factor(Scales,levels = num$Scales))  %>%
  dplyr::mutate(S = factor(S,levels = symp$S,labels = symp$S_name))  %>%
  dplyr::select(S,Scales,Scales2,Type)

scale <- readxl::read_excel("../DATA/Depression_Matrix_extra.xlsx")

################################################################################
```

```{r}
plot[[1]] <- CA_plot %>%
  ggplot2::ggplot(
    .,
    aes(x=S, y=Scales2, group=S, color=Scales, shape=Type, rev=F)
  ) +
  ggplot2::geom_line() + #keep this here, otherwise there is an error 

  # Generate the grid lines
  ggplot2::geom_hline(yintercept = 1:n_scales, color = "grey80", linewidth = .2) +
  ggplot2::geom_vline(xintercept = 1:n_symptoms, color = "grey80", linewidth = .2) +
  # Points and lines
  ggplot2::geom_line(color="grey60") +
  ggplot2::geom_point(size=3, fill="white") +
  # Fill the middle space with a white blank rectangle
  ggplot2::geom_rect(xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=.6,fill="white", color=NA) +
  # Polar coordinates 
  #circle or not
  #coord_polar() +
  ggplot2::coord_flip() +
  ggplot2::scale_shape_manual(values=c(21,19)) +
  ggplot2::scale_y_continuous(
    limits=c(0,n_scales+1),
    expand=c(0,0),
    breaks=1:n_scales,
    labels=levels(CA_plot$Scales),
    position = "right"
  ) +
  # The angle for the symptoms and remove the default grid lines
  ggplot2::theme(
    axis.text.x = element_text(
      angle=60, hjust=0,vjust = 0,
      color = case_when(
        scale$color == 0 ~ "black",
        scale$color == 1 ~ "#5a9ad7",
        scale$color == 2 ~ "#ff0000"
      )
    ),
    axis.text.y = element_text(
      #face = case_when(
        #symp$face == 0 ~ "plain",
        #symp$face == 1 ~ "bold",
      #),
      color = case_when(
        symp$color == 0 ~ "black",
        symp$color == 1 ~ "#5a9ad7",
        symp$color == 2 ~ "#ff0000"
      )
    ),
    panel.border = element_blank(),
    axis.line = element_blank(),
    axis.ticks = element_blank(),
    panel.grid = element_blank(),
    panel.background = element_blank(),
    legend.position="left",
    plot.margin = unit(rep(.5,4), "lines"),
    text = element_text(family="serif",size=20),
  ) +
  ggplot2::guides(color = guide_legend(ncol = 1)) + # legend一列
  ggplot2::xlab("") +
  ggplot2::ylab("") +  
  ggplot2::labs(fill="")  # remove legend title
    
    
ggsave(filename="../FIGURE/1_Content_Analysis.png", width = 18, height = 32)
# Figure 1 was further adjusted in Inkscape

rm(d, num, order_data, CA_plot, rawdata, symp, scale, n_scales, n_symptoms)
```