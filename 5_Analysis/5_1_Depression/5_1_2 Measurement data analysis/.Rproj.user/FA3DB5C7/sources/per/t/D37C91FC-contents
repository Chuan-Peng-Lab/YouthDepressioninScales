library(here)
library(bruceR)
library(tidyverse)
library(openxlsx)

# 载入数据
raw_data <- bruceR::import(here::here("data", "Rawdata1.xlsx"))

# 第一步筛选数据，只保留与抑郁有关的
selected_data <- raw_data %>%
  select(性别, 年龄, 
         DSRSC1:DSRSC18, 
         PHQ1:PHQ9, 
         DASS3, DASS5, DASS10, DASS13, DASS16, DASS17, DASS21, 
         CDI1:CDI27)

# 将性别转为因子并转换为数值型，其他列也转换为数值型
selected_data_numeric <- selected_data %>%
  mutate(性别 = factor(性别, levels = c("男", "女"), labels = c(1, 2))) %>%
  mutate(across(matches("性别|年龄|DSRSC|PHQ|DASS|CDI"), as.numeric))

# 处理缺失值
clean_data <- selected_data_numeric %>%
  drop_na()

# 将DSRSC, PHQ, DASS, CDI列的值全部减去1，用以计算检出率
transformed_data <- clean_data %>%
  mutate(across(matches("DSRSC|PHQ|DASS|CDI"), ~ .x - 1))
# 进行反向计分
# 对DSRSC第1、 2、4、7、8、9、11、12、13、16项进行反向处理
transformed_data <- transformed_data %>%
  mutate(
    across(c(DSRSC1, DSRSC2, DSRSC4, DSRSC7, DSRSC8, DSRSC9, 
             DSRSC11, DSRSC12, DSRSC13, DSRSC16), ~ 3 - .x)
  )

# 对CDI的 2, 5, 7, 8, 10, 11, 13, 15, 16, 18, 21, 24, 25项进行反向处理
transformed_data <- transformed_data %>%
  mutate(
    across(c(CDI2, CDI5, CDI7, CDI8, CDI10, CDI11, CDI13, CDI15, 
             CDI16, CDI18, CDI21, CDI24, CDI25), ~ 3 - .x)
  )

# 对每个个体的DSRSC, PHQ, DASS, CDI量表得分进行求和
summarised_data <- transformed_data %>%
  mutate(
    DSRSC_total = rowSums(across(matches("DSRSC[1-9]|DSRSC1[0-8]"), as.numeric)), 
    PHQ_total = rowSums(across(matches("PHQ[1-9]"), as.numeric)), 
    DASS_total = rowSums(across(matches("DASS[3,5,10,13,16,17,21]"), as.numeric)), 
    CDI_total = rowSums(across(matches("CDI[1-9]|CDI1[0-9]|CDI2[0-7]"), as.numeric)) 
  )

# 描述统计：年龄范围和性别比例
age_range <- range(summarised_data$年龄)
male_female_ratio <- table(summarised_data$性别) / nrow(summarised_data) * 100

print(paste("年龄范围:", age_range[1], "-", age_range[2]))
print(paste("男性比例:", round(male_female_ratio[1], 2), "%"))
print(paste("女性比例:", round(male_female_ratio[2], 2), "%"))

# 计算检出率
detection_rates <- summarised_data %>%
  summarise(
    DSRSC_detection = mean(DSRSC_total >= 15, na.rm = TRUE) * 100,
    PHQ_detection = mean(PHQ_total >= 10, na.rm = TRUE) * 100,
    CDI_detection = mean(CDI_total >= 20, na.rm = TRUE) * 100
  )

print(detection_rates)
# 相关分析
# DSRSC Q2Q14合并 Q10Q12合并 CDIQ3Q7Q24合并 Q15Q23合并
# 测量相同症状的有 1.DSRSC16 PHQ2 2.CDI1 DSRSC17 3.CDI4 DASS3
# 4.CDI11 DSRSC18 5.CDI20 DSRSC15 6.DSRSC11 PHQ6 7.CDI2 DSRSC1 DASS10
# 8.CDI3 7 24  DASS17 9.DSRSC7 DASS5 10.DSRSC10 12 PHQ1 11.CDI17 PHQ4 12.CDI18 PHQ5
# 13. CDI16 PHQ3 14.CDI12 DSRSC4 15.CDI10 DSRSC3 16.CDI9 PHQ9
# 计算相关系数
# 计算每对变量的相关系数
# 计算相关系数
cor_results <- list(
  "1. DSRSC16-PHQ2" = cor(summarised_data$DSRSC16, summarised_data$PHQ2, use = "complete.obs"),
  "2. CDI1-DSRSC17" = cor(summarised_data$CDI1, summarised_data$DSRSC17, use = "complete.obs"),
  "3. CDI4-DASS3" = cor(summarised_data$CDI4, summarised_data$DASS3, use = "complete.obs"),
  "4. CDI11-DSRSC18" = cor(summarised_data$CDI11, summarised_data$DSRSC18, use = "complete.obs"),
  "5. CDI20-DSRSC15" = cor(summarised_data$CDI20, summarised_data$DSRSC15, use = "complete.obs"),
  "6. DSRSC11-PHQ6" = cor(summarised_data$DSRSC11, summarised_data$PHQ6, use = "complete.obs"),
  "7. CDI2-DSRSC1-DASS10" = cor(summarised_data %>% select(CDI2, DSRSC1, DASS10), use = "complete.obs"),
  "8. CDI3-7-24-DASS17" = cor(summarised_data %>% select(CDI3, CDI7, CDI24, DASS17), use = "complete.obs"),
  "9. DSRSC7-DASS5" = cor(summarised_data$DSRSC7, summarised_data$DASS5, use = "complete.obs"),
  "10. DSRSC10-12-PHQ1" = cor(summarised_data %>% select(DSRSC10, DSRSC12, PHQ1), use = "complete.obs"),
  "11. CDI17-PHQ4" = cor(summarised_data$CDI17, summarised_data$PHQ4, use = "complete.obs"),
  "12. CDI18-PHQ5" = cor(summarised_data$CDI18, summarised_data$PHQ5, use = "complete.obs"),
  "13. CDI16-PHQ3" = cor(summarised_data$CDI16, summarised_data$PHQ3, use = "complete.obs"),
  "14. CDI12-DSRSC4" = cor(summarised_data$CDI12, summarised_data$DSRSC4, use = "complete.obs"),
  "15. CDI10-DSRSC3" = cor(summarised_data$CDI10, summarised_data$DSRSC3, use = "complete.obs"),
  "16. CDI9-PHQ9" = cor(summarised_data$CDI9, summarised_data$PHQ9, use = "complete.obs")
)

# 打印所有相关系数结果
print("各对变量的相关系数：")
print(cor_results)

# 计算多题目组之间的两两相关性
cor7_matrix <- cor(summarised_data %>% select(CDI2, DSRSC1, DASS10), use = "complete.obs")
cor8_matrix <- cor(summarised_data %>% select(CDI3, CDI7, CDI24, DASS17), use = "complete.obs")

print("7. CDI2, DSRSC1, DASS10 的两两相关性矩阵：")
print(cor7_matrix)

print("8. CDI3, CDI7, CDI24, DASS17 的两两相关性矩阵：")
print(cor8_matrix)

# 计算四个量表总分的相关系数
total_scores_cor <- cor(summarised_data %>%
                          select(DSRSC_total, PHQ_total, DASS_total, CDI_total),
                        use = "complete.obs")

print("四个量表总分的相关性矩阵：")
print(total_scores_cor)

# 计算所有题目的相关系数的绝对值，并汇报最小、最大、平均值
question_data <- summarised_data %>%
  select(-c(性别, 年龄, DSRSC_total, PHQ_total, DASS_total, CDI_total))

# 计算全量表的相关系数矩阵
full_cor_matrix <- cor(question_data, use = "complete.obs")
abs_full_cor_matrix <- abs(full_cor_matrix)

# 计算绝对值的最小值、最大值、平均值
min_abs_full_cor <- min(abs_full_cor_matrix[lower.tri(abs_full_cor_matrix)])
max_abs_full_cor <- max(abs_full_cor_matrix[lower.tri(abs_full_cor_matrix)])
mean_abs_full_cor <- mean(abs_full_cor_matrix[lower.tri(abs_full_cor_matrix)])

# 输出计算结果
print(paste("全量表相关系数绝对值最小值:", round(min_abs_full_cor, 6)))
print(paste("全量表相关系数绝对值最大值:", round(max_abs_full_cor, 6)))
print(paste("全量表相关系数绝对值平均值:", round(mean_abs_full_cor, 6)))

# 导出矩阵至Excel
write.xlsx(abs_full_cor_matrix, here::here("result", "full_cor_matrix.xlsx"))

# 计算去除指定题目后的相关系数
exclude_columns <- c("DSRSC16", "PHQ2", "CDI1", "DSRSC17", "CDI4", "DASS3",
                     "CDI11", "DSRSC18", "CDI20", "DSRSC15", "DSRSC11", "PHQ6",
                     "CDI2", "DSRSC1", "DASS10", "CDI3", "CDI7", "CDI24", "DASS17",
                     "DSRSC7", "DASS5", "DSRSC10", "DSRSC12", "PHQ1", "CDI17", "PHQ4", "CDI18", "PHQ5", "CDI16", "PHQ3", "CDI12", "DSRSC4", "CDI10", "DSRSC3", "CDI9", "PHQ9")

# 去除指定题目后的数据
remaining_data <- question_data %>%
  select(-one_of(exclude_columns))

# 计算去除指定题目后的相关系数矩阵
remaining_cor_matrix <- cor(remaining_data, use = "complete.obs")
abs_remaining_cor_matrix <- abs(remaining_cor_matrix)

# 计算绝对值的最小值、最大值、平均值
min_abs_remaining_cor <- min(abs_remaining_cor_matrix[lower.tri(abs_remaining_cor_matrix)])
max_abs_remaining_cor <- max(abs_remaining_cor_matrix[lower.tri(abs_remaining_cor_matrix)])
mean_abs_remaining_cor <- mean(abs_remaining_cor_matrix[lower.tri(abs_remaining_cor_matrix)])

# 输出计算结果
print(paste("去除指定题目后相关系数绝对值最小值:", round(min_abs_remaining_cor, 6)))
print(paste("去除指定题目后相关系数绝对值最大值:", round(max_abs_remaining_cor, 6)))
print(paste("去除指定题目后相关系数绝对值平均值:", round(mean_abs_remaining_cor, 6)))

# 导出剩余题目的相关矩阵至Excel
write.xlsx(abs_remaining_cor_matrix, here::here("result", "remaining_cor_matrix.xlsx"))

# 指定题目列表
exclude_columns <- c("DSRSC16", "PHQ2", "CDI1", "DSRSC17", "CDI4", "DASS3",
                     "CDI11", "DSRSC18", "CDI20", "DSRSC15", "DSRSC11", "PHQ6",
                     "CDI2", "DSRSC1", "DASS10", "CDI3", "CDI7", "CDI24", "DASS17",
                     "DSRSC7", "DASS5", "DSRSC10", "DSRSC12", "PHQ1", "CDI17",
                     "PHQ4", "CDI18", "PHQ5", "CDI16", "PHQ3", "CDI12", "DSRSC4",
                     "CDI10", "DSRSC3", "CDI9", "PHQ9")

# 提取指定题目的数据
specified_data <- question_data %>%
  select(one_of(exclude_columns))

# 计算指定题目的相关系数矩阵
specified_cor_matrix <- cor(specified_data, use = "complete.obs")
abs_specified_cor_matrix <- abs(specified_cor_matrix)

# 计算绝对值的最小值、最大值、平均值
min_abs_specified_cor <- min(abs_specified_cor_matrix[lower.tri(abs_specified_cor_matrix)])
max_abs_specified_cor <- max(abs_specified_cor_matrix[lower.tri(abs_specified_cor_matrix)])
mean_abs_specified_cor <- mean(abs_specified_cor_matrix[lower.tri(abs_specified_cor_matrix)])

# 输出计算结果
print(paste("指定题目相关系数绝对值最小值:", round(min_abs_specified_cor, 6)))
print(paste("指定题目相关系数绝对值最大值:", round(max_abs_specified_cor, 6)))
print(paste("指定题目相关系数绝对值平均值:", round(mean_abs_specified_cor, 6)))

# 导出指定题目的相关矩阵至Excel
write.xlsx(abs_specified_cor_matrix, here::here("result", "specified_cor_matrix.xlsx"))